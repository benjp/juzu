Various things to do, not exhaustive that needs to go in the roadmap

- http://code.google.com/p/acris/wiki/AnnotationProcessing_Testing
- http://www.pingtimeout.fr/2012/10/debugging-annotation-processor-in-every.html
- http://acris.googlecode.com/svn-history/r5773/sesam/branches/1.1.0/sesam-annotations-support/src/test/java/sk/seges/sesam/core/pap/AnnotationTest.java
- https://github.com/excilys/androidannotations/blob/develop/AndroidAnnotations/androidannotations/src/main/java/org/androidannotations/helper/AndroidManifestFinder.java
- findManifestInParentsDirectories();

- implement ajax with @Route("/foo/{bar}
- maybe make Template implements Streamable
- try to integrate Dagger DI : http://square.github.com/dagger/
- bind Juzu scopes to Java EE scopes in CDI
- implement some kind of completion to see what it gives
- in dev mode : only compile the package of the application to speed up build
- translate Juzu scopes into other framework specific scopes : session scope to CDI scope, etc...
- in standalone mode : implement portlet Preferences with cookie
- improve startup error reporting, specially from plugins (cf asset plugin that validates classpath assets exist)
- option for copying an asset to the output
- send 404 when resource cannot be resolved with some warn in the log
- implement java type in type safe template parameters like param name=foo type=int

- parse error in template parser
- more stack trace sanitization
- handle internal error correctly
- think about doing a "debug" portlet that would cooperate with juzu portlets
- for plugins : think about an @Depends to define dependencies for ordering (?)
- decouple plugin discovery from plugin bootstrap in order to know the declared classes / it's already more or less the case actually
- one issue is to bootstrap correctly juzu in a managed environment

Template suggestions:

- combine curly brace and angle bracket: <% if () {> <}>
- combine condition and angle bracket: <(a == 0)>
- property ${} combined with Elvis operator like : ?{} or $?{} to avoid "null" result

